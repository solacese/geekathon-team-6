
//@flow

import { Transition } from 'react-transition-group';
import React, {Component} from 'react'

type Props = {
}

type State = {
    bool: boolean,

}




export default class Ribbon extends Component<Props,State>{
    constructor(props:Props){
        super(props)
        this.state = {
            bool: false
        }
    }
    toggle = () => {
        console.log('toggle')
        this.setState({
            bool: !this.state.bool,
        })
    }

    render(){
        console.log(this)
        return(
            <div>
                <button onClick={this.toggle}>Fade</button>
                <div>
                    <Fade in={this.state.bool} />
                </div>
            </div>
        )
    }
}


const duration = 1000;

const defaultStyle = {
  transition: `opacity ${duration}ms ease-in-out`,
  opacity: 0,
  padding: 20,
  display: 'inline-block',
  backgroundColor: '#8787d8'
}

const transitionStyles = {
  entering: { opacity: 0 },
  entered: { opacity: 1 },
};


// const duration = 300;

// const defaultStyle = {
//   transition: `opacity ${duration}ms ease-in-out`,
//   opacity: 0,
// }

// const transitionStyles = {
//   entering: { opacity: 1 },
//   entered:  { opacity: 1 },
//   exiting:  { opacity: 0 },
//   exited:  { opacity: 0 },
// };

const Fade = ({ in: inProp }) => (
  <Transition in={inProp} 
  timeout={{
    appear: 300,
    enter: 3000,
    exit: 5000,
    }}
    onEntering={()=>console.log('onEntering')}
    onEntered={()=>console.log('onEntered')}
    onExiting={()=>console.log('onExiting')}
    onExit={()=>console.log('onExit')}
    >
  {/* timeout={duration}> */}
    {state => (
      <div style={{
        ...defaultStyle,
        ...transitionStyles[state]
      }}>
        I'm a fade Transition!
      </div>
    )}
  </Transition>
);


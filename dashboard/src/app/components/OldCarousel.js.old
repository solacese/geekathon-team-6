//@flow

import React from 'react';
import { withStyles } from '@material-ui/core/styles'

import { CarouselProvider, Slider, Slide, Dot, ButtonBack, ButtonNext } from 'pure-react-carousel';
import 'pure-react-carousel/dist/react-carousel.es.css';
import Button from '@material-ui/core/Button'

import { WithStore } from 'pure-react-carousel';

import MySlider from './MySlider'

type Props = {
    classes: any,
}
type State = {
    totalSlides: number,
    currentSlide: number,
    
}


const styles = theme => ({
    button: {
      margin: theme.spacing.unit,
    },
    input: {
      display: 'none',
    },
  });
  



class Carousel extends React.Component<Props> {
    slides = []
    state = {
        totalSlides: 8,
        // currentSlide: 0,
    }
    constructor(props){
        super(props)
        this.slides.push(<Slide index={0}>I am the 0 First Slide.</Slide>)
        this.slides.push(<Slide index={1}>I am the 1 Second Slide.</Slide>)
        this.slides.push(<Slide index={2}>I am the 2 Third Slide.</Slide>)
        this.slides.push(<Slide index={3}>I am the 3 Third Slide.</Slide>)
        this.slides.push(<Slide index={4}>I am the 4 Third Slide.</Slide>)
        this.slides.push(<Slide index={5}>I am the 5 Third Slide.</Slide>)
        this.slides.push(<Slide index={6}>I am the 6 Third Slide.</Slide>)
        this.slides.push(<Slide index={7}>I am the 7 Third Slide.</Slide>)

    }

    addImage = () =>{
        console.log('addImage')
        this.setState({totalSlides: this.state.totalSlides+1})
    }

    removeImage = () =>{
        console.log('removeImage')
        this.setState({totalSlides: this.state.totalSlides-1})
    }


    render() {
        const { classes } = this.props;

        return (
            <div>
            {/* <Button color="primary" onClick={()=>{
                console.log('Add', this.state)
                this.slides.push(<Slide index={this.state.totalSlides}> 
                I am the New Slide {this.state.totalSlides+1}.</Slide>)

                this.setState({totalSlides: this.state.totalSlides+1,
                currentSlide: this.state.currentSlide == this.state.totalSlides-1?
                    this.state.currentSlide + 1: this.state.currentSlide
                })

            }}>Add</Button>
            <Button color="primary" onClick={()=>{
                console.log('Remove', this.state)
                this.slides.shift()

                this.setState({totalSlides: this.state.totalSlides-1,
                currentSlide: this.state.currentSlide == 0?
                    this.state.currentSlide: this.state.currentSlide -1
                })

            }}>Remove</Button>

 */}
            <CarouselProvider
            naturalSlideWidth={100}
            naturalSlideHeight={50}
            isPlaying={true}
            // currentSlide={this.state.currentSlide}
            totalSlides={this.state.totalSlides}
            // totalSlides={3}
            visibleSlides={2}
            >
                <MySlider 
                    addFn={()=>{console.log('myaddFn'); this.addImage()}}
                    removeFn={()=>{console.log('removeFn'); this.removeImage()}}
                />
                <ButtonBack>Back</ButtonBack>
                <ButtonNext>Next</ButtonNext>
        </CarouselProvider>     
        </div>   
        )
    }
}


// const mapstateToProps = (state) =>{
//     console.log('mapstateToProps', state)
// }

// const DecoratedCarousel = WithStore(Carousel, mapstateToProps)

export default withStyles(styles)(Carousel);
// export default DecoratedCarousel;

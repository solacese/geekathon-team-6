//@flow

import React from 'react';
import { withStyles } from '@material-ui/core/styles'

import { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';
import 'pure-react-carousel/dist/react-carousel.es.css';
import Button from '@material-ui/core/Button'

import { WithStore } from 'pure-react-carousel';


type Props = {
    classes: any,
}
type State = {
    totalSlides: number,
    currentSlide: number,
    
}


const styles = theme => ({
    button: {
      margin: theme.spacing.unit,
    },
    input: {
      display: 'none',
    },
  });
  



class MySlider extends React.Component<Props,State> {
    slides = []
    // state = {
    //     totalSlides: 3,
    //     currentSlide: 0,
    // }
    constructor(props){
        super(props)
        this.slides.push(<Slide index={0}>I am the 0 First Slide.</Slide>)
        this.slides.push(<Slide index={1}>I am the 1 Second Slide.</Slide>)
        this.slides.push(<Slide index={2}>I am the 2 Third Slide.</Slide>)
        this.slides.push(<Slide index={3}>I am the 3 Third Slide.</Slide>)
        this.slides.push(<Slide index={4}>I am the 4 Third Slide.</Slide>)
        this.slides.push(<Slide index={5}>I am the 5 Third Slide.</Slide>)
        this.slides.push(<Slide index={6}>I am the 6 Third Slide.</Slide>)
        this.slides.push(<Slide index={7}>I am the 7 Third Slide.</Slide>)

    }
    render() {
        const { classes } = this.props;
        console.log(this)

        return (
            <div>
            <Button color="primary" onClick={()=>{
                console.log('Add', this.state)
                this.slides.push(<Slide key={this.props.totalSlides}
                     index={this.props.totalSlides}> 
                    I am the New Slide {this.props.totalSlides+1}.</Slide>)

                // this.setState({totalSlides: this.state.totalSlides+1,
                // currentSlide: this.state.currentSlide == this.state.totalSlides-1?
                //     this.state.currentSlide + 1: this.state.currentSlide
                // })

                this.props.carouselStore.setStoreState({
                    // currentSlide: this.state.totalSlides-1,
                    // totalSlides: this.props.totalSlides+1,

                }) 
                this.props.addFn()


            }}>Add</Button>
            <Button color="primary" onClick={()=>{
                console.log('Remove', this.state)
                this.slides.shift()

                this.props.removeFn()
                this.props.carouselStore.setStoreState({
                    currentSlide: this.props.currentSlide == 0?
                        this.props.currentSlide
                        :
                        this.props.currentSlide-1

                }) 


                // this.setState({totalSlides: this.state.totalSlides-1,
                // currentSlide: this.state.currentSlide == 0?
                //     this.state.currentSlide: this.state.currentSlide -1
                // })

            }}>Remove</Button>


                <Slider>
                {this.slides}
                </Slider>
        </div>   
        )
    }
}


const mapstateToProps = (state) =>{
    console.log('mapstateToProps', state)
    return({currentSlide: state.currentSlide,
    totalSlides: state.totalSlides})
}

const DecoratedCarousel = WithStore(MySlider, mapstateToProps)

// export default withStyles(styles)(DecoratedCarousel);
export default DecoratedCarousel;
